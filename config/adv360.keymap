#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        #include "macros.dtsi"
    #include "version.dtsi"
    #ifndef VERSION_MACRO

        macro_ver: macro_ver {
            compatible = "zmk,behavior-macro";
            label = "macro_version";
            #binding-cells = <0>;
            bindings = <&kp RET>;
        };

        #endif

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;

            hold-while-undecided;
        };

        hml: homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <7 21 39 40 54 71 72 73 74 75 59 58 57 56 55 41 42 43 45 44 27 26 12 13 11 10 9 8 22 23 24 25 37 38 69 70 68 53 35 36 52 67 66 65 15 16 18 32 19 50 48 29 31>;
            hold-while-undecided;
        };

        hmr: homerow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <37 38 69 70 68 53 35 36 52 67 66 65 18 32 19 50 48 0 1 2 3 4 5 6 20 34 33 51 64 62 63 49 31 17 16 30 15 29 47 61 60 46 28 14 44 42 55 54>;
            hold-while-undecided;
        };
    };

    macros {
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp EQUAL      &kp N1           &kp N2       &kp N3        &kp N4             &kp N5   &tog 1                                                        &mo 3      &kp N6   &kp N7              &kp N8        &kp N9            &kp N0                   &kp MINUS
&kp TAB        &kp Q            &kp W        &kp E         &kp R              &kp T    &none                                                         &none      &kp Y    &kp U               &kp I         &kp O             &kp P                    &kp BSLH
&hm LCTRL ESC  &hml LEFT_GUI A  &hml LALT S  &hml LCTRL D  &hml LEFT_SHIFT F  &lt 2 G  &none     &hm LCMD ESC  &kp LALT      &kp LCTRL  &caps_word   &none      &lt 2 H  &hmr RIGHT_SHIFT J  &hmr LCTRL K  &hmr RIGHT_ALT L  &hmr LEFT_GUI SEMICOLON  &kp SQT
&kp LSHFT      &hml LSHFT Z     &kp X        &kp C         &kp V              &kp B                            &kp HOME      &kp PG_UP                          &kp N    &kp M               &kp COMMA     &kp DOT           &hmr RIGHT_SHIFT SLASH   &kp RSHFT
&mo 2          &kp ESCAPE       &kp GRAVE    &kp MINUS     &kp LEFT_GUI                &kp BSPC  &lt 1 TAB     &kp END       &kp PG_DN  &lt 2 ENTER  &kp SPACE           &kp LEFT_ALT        &kp MINUS     &kp SQT           &kp BACKSLASH            &mo 2
            >;
        };

        layer_keypad {
            bindings = <
&kp EQUAL  &kp N1            &kp N2             &kp N3                &kp N4                 &kp N5         &trans                                                   &mo 3   &none      &kp KP_NUM    &kp EQUAL     &kp SLASH     &kp STAR   &kp MINUS
&kp TAB    &kp EXCL          &kp AT             &kp HASH              &kp DOLLAR             &kp PERCENT    &none                                                    &none   &kp SLASH  &kp N7        &kp N8        &kp N9        &kp MINUS  &kp BSLH
&kp ESC    &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp PAGE_UP    &none     &kp LCTRL  &kp LALT      &kp LGUI   &kp RCTRL  &none   &kp STAR   &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp PLUS   &kp SQT
&kp LSHFT  &kp CARET         &kp AMPERSAND      &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp PAGE_DOWN                       &kp HOME      &kp PG_UP                     &kp EQUAL  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp ENTER  &kp RSHFT
&mo 2      &kp GRAVE         &kp CAPS           &kp LEFT              &kp RIGHT                             &kp BSPC  &kp DEL    &kp END       &kp PG_DN  &kp ENTER  &kp N0             &kp UP        &kp DOWN      &kp DOT       &kp RBKT   &mo 2
            >;
        };

        layer_fn {
            bindings = <
&kp F1  &kp F2  &kp F3                &kp F4                    &kp F5        &kp F6      &tog 1                                          &mo 3   &kp F7                 &kp F8                 &kp F9                 &kp F10                &kp F11    &kp F12
&trans  &trans  &kp C_PREV            &kp C_PLAY_PAUSE          &kp C_NEXT    &kp C_STOP  &none                                           &none   &kp LS(LA(LC(LG(W))))  &kp LS(LA(LC(LG(T))))  &kp LS(LA(LC(LG(I))))  &kp LS(LA(LC(LG(O))))  &kp LA(S)  &trans
&trans  &trans  &kp C_BRIGHTNESS_INC  &kp LG(LS(LC(NUMBER_4)))  &kp C_VOL_UP  &kp C_MUTE  &none       &trans  &trans      &trans  &trans  &none   &kp LEFT               &kp DOWN               &kp UP_ARROW           &kp RIGHT              &kp LA(A)  &trans
&trans  &trans  &kp C_BRIGHTNESS_DEC  &kp LG(LS(NUMBER_4))      &kp C_VOL_DN  &trans                          &trans      &trans                  &kp LS(LA(LC(LG(N))))  &kp LS(LA(LC(LG(E))))  &kp LS(LA(LC(LG(S))))  &kp LS(LA(LC(LG(C))))  &trans     &trans
&trans  &trans  &trans                &trans                    &trans                    &kp DELETE  &trans  &trans      &trans  &trans  &trans                         &trans                 &trans                 &trans                 &trans     &trans
            >;
        };

        layer_mod {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none                                                  &trans                  &none   &none       &none       &none   &none  &none
&none  &none         &trans        &trans        &none         &trans        &bootloader                                            &bootloader             &none   &none       &trans      &trans  &none  &none
&none  &none         &trans        &none         &none         &none         &none        &none  &none      &bt BT_CLR  &none       &rgb_ug RGB_MEFS_CMD 5  &trans  &trans      &trans      &trans  &none  &none
&none  &none         &none         &trans        &macro_ver    &none                             &none      &none                                           &trans  &none       &none       &none   &none  &none
&none  &none         &none         &none         &none                       &none        &none  &none      &none       &bl BL_TOG  &rgb_ug RGB_TOG                 &bl BL_INC  &bl BL_DEC  &none   &none  &none
            >;
        };

        layer_4 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                      &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                      &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans      &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans      &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
